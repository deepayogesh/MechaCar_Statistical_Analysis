# Deliverable 1: Linear Regression to Predict MPG
# The MechaCar_mpg.csv dataset contains mpg test results for 50 prototype MechaCars. 
# The MechaCar prototypes were produced using multiple design specifications to identify ideal vehicle performance.
# Multiple metrics, such as vehicle length, vehicle weight, spoiler angle, drivetrain, and ground clearance, were collected for each vehicle. 
# Using your knowledge of R, you'll design a linear model that predicts the mpg of MechaCar prototypes using several variables from the MechaCar_mpg.csv file. 
# Then, you'll write a short interpretation of the multiple linear regression results in the README.md.

library(dplyr)

# Read in the MechaCa_mpg.csv file.  import and read in the Suspension_Coil.csv file as dataframe
get_path <- getwd()
setwd (get_path)
mydf <-  read.csv(file="Resources/MechaCar_mpg.csv")

library(ggplot2)

plt <- ggplot(mydf,aes(x=mpg,y=spoiler_angle)) #import dataset into ggplot2
plt + geom_point() #create scatter plot


model <- lm(mpg ~ vehicle_length,mydf) #create linear model
yvals <- model$coefficients['vehicle_length']*mydf$vehicle_length +
  model$coefficients['(Intercept)'] #determine y-axis values from linear model
plt <- ggplot(mydf,aes(x=vehicle_length,y=mpg)) #import dataset into ggplot2
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model

# for second variable  vehicle_weight
model <- lm(mpg ~ vehicle_weight,mydf) #create linear model
yvals <- model$coefficients['vehicle_weight']*mydf$vehicle_weight +
  model$coefficients['(Intercept)'] #determine y-axis values from linear model
plt <- ggplot(mydf,aes(x=vehicle_weight,y=mpg)) #import dataset into ggplot2
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model

# for second variable  spoiler_angle
model <- lm(mpg ~ spoiler_angle,mydf) #create linear model
yvals <- model$coefficients['spoiler_angle']*mydf$spoiler_angle +
  model$coefficients['(Intercept)'] #determine y-axis values from linear model
plt <- ggplot(mydf,aes(x=spoiler_angle,y=mpg)) #import dataset into ggplot2
plt + geom_point() + geom_line(aes(y=yvals), color = "green") #plot scatter and linear model

# for second variable  ground_clearance
model <- lm(mpg ~ ground_clearance,mydf) #create linear model
yvals <- model$coefficients['ground_clearance']*mydf$ground_clearance +
  model$coefficients['(Intercept)'] #determine y-axis values from linear model
plt <- ggplot(mydf,aes(x=ground_clearance,y=mpg)) #import dataset into ggplot2
plt + geom_point() + geom_line(aes(y=yvals), color = "green") #plot scatter and linear model


# for second variable  AWD
model <- lm(mpg ~ AWD,mydf) #create linear model
yvals <- model$coefficients['AWD']*mydf$AWD +
  model$coefficients['(Intercept)'] #determine y-axis values from linear model
plt <- ggplot(mydf,aes(x=AWD,y=mpg)) #import dataset into ggplot2
plt + geom_point() + geom_line(aes(y=yvals), color = "blue") #plot scatter and linear model


library(tidyverse)


lm(mpg ~ vehicle_length +vehicle_weight +spoiler_angle +ground_clearance + AWD,mydf) #create linear model  with mpg and vehicle_length
 

v.lm <-lm(mpg ~ vehicle_length +vehicle_weight +spoiler_angle +ground_clearance + AWD,mydf)

summary(v.lm)  # summary of linear model

#  Deliverable 2: Create Visualizations for the Trip Analysis
# The MechaCar Suspension_Coil.csv dataset contains the results from multiple production lots. 
# In this dataset, the weight capacities of multiple suspension coils were tested to determine 
# if the manufacturing process is consistent across production lots
#  create a summary statistics  for 
#  The suspension coil's PSI continuous variable across all manufacturing lots
#  The following PSI metrics for each lot: mean, median, variance, and standard deviation.


# Read in the Suspension_Coil.csv file.  import and read in the Suspension_Coil.csv file as a table.
wd <-getwd()
setwd (wd)

suspension_coil_table <- read.csv(file="Resources/Suspension_Coil.csv", check.names = F,stringsAsFactors = F)

total_summary <- suspension_coil_table %>%  summarize(Mean =mean(PSI),Medeian =median(PSI),variance =var(PSI),SD =sd(PSI),.groups ='keep')

lot_summaary <- suspension_coil_table %>% group_by(Manufacturing_Lot) %>%  summarize(Mean =mean(PSI),Medeian =median(PSI),variance =var(PSI),SD =sd(PSI),.groups ='keep')

#  Deliverable 3: T-Tests on Suspension Coils
# 
#  PSI across all manufacturing lots is statistically different from the population mean of 1,500 pounds per square inch
t.test(log10(suspension_coil_table$PSI),mu= mean(log10(suspension_coil_table$PSI)))
       
# perform t-tests to determine if all manufacturing lots and each lot individually 
#  are statistically different from the population mean of 1,500 pounds per square inch
population1 <- subset(suspension_coil_table, Manufacturing_Lot == "Lot1") 

population2 <- subset(suspension_coil_table, Manufacturing_Lot == "Lot2")

population3 <- subset(suspension_coil_table, Manufacturing_Lot == "Lot3")

t.test(population1$PSI,population2$PSI)

t.test(population2$PSI, population3$PSI)

t.test(population1$PSI,population3$PSI)

#   Another way #compare the mean difference between two samples
t.test(population1$PSI,population2$PSI, paired = T)
t.test(population1$PSI,population3$PSI, paired = T)

#  Deliverable 4: Design a Study Comparing the MechaCar to the Competition





